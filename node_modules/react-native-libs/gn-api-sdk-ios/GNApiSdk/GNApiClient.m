//
//  GNApiClient.m
//  GNApiSdk
//
//  Created by Thomaz Feitoza on 5/5/15.
//  Copyright (c) 2015 Gerencianet. All rights reserved.
//

#import "GNApiClient.h"


@implementation GNApiClient

NSString *const kGNApiBaseUrlProduction = @"https://api.gerencianet.com.br/v1";
NSString *const kGNApiBaseUrlProductionPost = @"https://tokenizer.gerencianet.com.br";
NSString *const kGNApiBaseUrlSandbox = @"https://sandbox.gerencianet.com.br/v1";

- (instancetype)initWithConfig:(GNConfig *)config {
    self = [super init];
    _config = config;
    return self;
}

- (PMKPromise *) request:(NSString *)route method:(NSString *)method params:(NSDictionary *)params {
   
    
    if(!_config.accountCode){
        [NSException raise:@"Account code not defined" format:@"Please setup your GN account code before making requests"];
    }
    
    NSString *url = [NSString stringWithFormat:@"%@%@", (_config.sandbox ? kGNApiBaseUrlSandbox : kGNApiBaseUrlProduction), route];
    
    NSString *urlpost = [NSString stringWithFormat:@"%@%@", (_config.sandbox ? kGNApiBaseUrlSandbox : kGNApiBaseUrlProductionPost), route];
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
         [manager setRequestSerializer:[AFJSONRequestSerializer serializer]];
    
    NSDictionary *headers = @{@"account-code": _config.accountCode, @"If-None-Match": @"false"};
    
    
    return [PMKPromise new:^(PMKFulfiller fulfill, PMKRejecter reject) {
        
        if ([method isEqualToString:@"POST"]) {
            
            
        
        [manager POST:urlpost parameters:params headers:headers progress:nil success:^(NSURLSessionTask *task, id responseObject)
                 {
            
           
                        GNError *gnApiErr = nil;
                        if(!responseObject){
                            gnApiErr = [[GNError alloc] initWithCode:500 message:@"Invalid response data."];
                            reject(gnApiErr);
                        }
                        else if([responseObject objectForKey:@"error"]){
                            gnApiErr = [[GNError alloc] initWithDictionary:responseObject];
                            reject(gnApiErr);
                        }
                        else {
                            fulfill(responseObject);
                        }
            
                  }
                      failure:^(NSURLSessionTask *operation, NSError *error)
                 {
            
            
                    GNError *gnApiErr;
                    gnApiErr = [[GNError alloc] initWithCode:500 message:@"Invalid response data."];
                       
                    reject(gnApiErr);
                  }
        ];
        
        
        } else if ([method isEqualToString:@"GET"]) {
            
            
            [manager GET:url parameters:params headers:headers progress:nil success:^(NSURLSessionTask *task, id responseObject)
                     {
               
                           
                
                            GNError *gnApiErr = nil;
                            if(!responseObject){
                                gnApiErr = [[GNError alloc] initWithCode:500 message:@"Invalid response data."];
                                reject(gnApiErr);
                            }
                            else if([responseObject objectForKey:@"error"]){
                                gnApiErr = [[GNError alloc] initWithDictionary:responseObject];
                                reject(gnApiErr);
                            }
                            else {
                                fulfill(responseObject);
                            }
                      }
                          failure:^(NSURLSessionTask *operation, NSError *error)
                     {
                
                
                
                        GNError *gnApiErr;
                        gnApiErr = [[GNError alloc] initWithCode:500 message:@"Invalid response data."];
                           
                        reject(gnApiErr);
                
                    
                      }
            ];
            
        } else if ([method isEqualToString:@"GETT"]) {
            
            
            
            [manager GET:urlpost parameters:params headers:headers progress:nil success:^(NSURLSessionTask *task, id responseObject)
                     {
               
                           
                
                            GNError *gnApiErr = nil;
                            if(!responseObject){
                                gnApiErr = [[GNError alloc] initWithCode:500 message:@"Invalid response data."];
                                reject(gnApiErr);
                            }
                            else if([responseObject objectForKey:@"error"]){
                                gnApiErr = [[GNError alloc] initWithDictionary:responseObject];
                                reject(gnApiErr);
                            }
                            else {
                                fulfill(responseObject);
                            }
                      }
                          failure:^(NSURLSessionTask *operation, NSError *error)
                     {
                
                
                
                        GNError *gnApiErr;
                        gnApiErr = [[GNError alloc] initWithCode:500 message:@"Invalid response data."];
                           
                        reject(gnApiErr);
                
                    
                      }
            ];
            
            
            }
        
    }];
}

@end
